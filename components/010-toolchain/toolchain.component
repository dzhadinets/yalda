#!/bin/bash

function do_init
{
    if [ -d "$CONFIG_YALDA_TOOLCHAIN_DIR" ]; then
        YALDA_TOOLCHAIN_DIR=$(realpath "$CONFIG_YALDA_TOOLCHAIN_DIR")
    else
        YALDA_TOOLCHAIN_DIR=$(realpath "$YALDA_WORKDIR/$CONFIG_YALDA_TOOLCHAIN_DIR")
    fi
    case "$YALDA_ARCH" in
        x86)
            TOOLCHAIN_BOOTLIN_URL="https://toolchains.bootlin.com/downloads/releases/toolchains/x86-i686/tarballs/x86-i686--glibc--stable-2023.11-1.tar.bz2"
        ;;
        x86_64)
            TOOLCHAIN_BOOTLIN_URL="https://toolchains.bootlin.com/downloads/releases/toolchains/x86-64/tarballs/x86-64--glibc--stable-2023.11-1.tar.bz2"
        ;;
        arm)
            TOOLCHAIN_BOOTLIN_URL="https://toolchains.bootlin.com/downloads/releases/toolchains/armv7-eabihf/tarballs/armv7-eabihf--glibc--stable-2023.11-1.tar.bz2"
        ;;
        arm64)
            TOOLCHAIN_BOOTLIN_URL="https://toolchains.bootlin.com/downloads/releases/toolchains/aarch64/tarballs/aarch64--glibc--stable-2023.11-1.tar.bz2"
        ;;
        riscv)
            TOOLCHAIN_BOOTLIN_URL="https://toolchains.bootlin.com/downloads/releases/toolchains/riscv64-lp64d/tarballs/riscv64-lp64d--glibc--stable-2023.11-1.tar.bz2"
        ;;
        *)
            log_error "Toolchain: Unsupported arch: ${YALDA_ARCH}"
        ;;
    esac

    if [ "$CONFIG_YALDA_USE_TOOLCHAIN" == "y" ]; then
        log_info "Use toolchain from $YALDA_TOOLCHAIN_DIR"
        if [ ! -d "$YALDA_TOOLCHAIN_DIR/bin" ]; then
            log_err "Wrong toolchain"
        fi
        export PATH=$YALDA_TOOLCHAIN_DIR/bin:$PATH
    fi
    if [ -n "$YALDA_ARCH" ];then
        export ARCH=$YALDA_ARCH
        export CROSS_COMPILE=${CONFIG_YALDA_TOOLCHAIN_CROSS_PREFIX}
        log_dbg "ARCH $YALDA_ARCH"
        if [ "$CONFIG_YALDA_ARCH_64BITS" == "y" ]; then
            log_dbg "64bit"
        else
            log_dbg "32bit"
             export CFLAGS=-m32
            export LDFLAGS=-m32
        fi
    fi
}

function do_sync
{
    if [ "$CONFIG_YALDA_USE_TOOLCHAIN" == "y" ]; then
        if [ "$CONFIG_YALDA_TOOLCHAIN_FROM_BOOTLIN" == y ];then
            CONFIG_YALDA_TOOLCHAIN_FROM_URL="y"
            CONFIG_YALDA_TOOLCHAIN_URL=$TOOLCHAIN_BOOTLIN_URL
        fi
        if [ "$CONFIG_YALDA_TOOLCHAIN_FROM_URL" == "y" ]; then
            component_fetch_unpack "toolchain" "$YALDA_TOOLCHAIN_DIR" "$CONFIG_YALDA_TOOLCHAIN_URL"
        elif [ "$CONFIG_YALDA_TOOLCHAIN_FROM_DIR" != "y" ]; then
            log_error "Unknown sync method"
        fi
    fi
    log_info "Toolchain sync has been done"
}

function do_build
{
    ### here it is must be sanity check of the toolchain
    return
}

function do_clean
{
    rm -f "$YALDA_TOOLCHAIN_DIR"
}
