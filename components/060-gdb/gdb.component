#!/bin/bash

function do_init
{
    return
}

function do_sync
{
    return
}

function do_build
{
    return
}

function gdb_launch
{
    if [ "$CONFIG_YALDA_FROM_HOST" == "y" ];then
        log_error "Host kernel debug is not implemented yet"
    else
        # launch gdb and qemu in a single call. Idea is for integration with IDEs. TBD
        if [ "$1" == "--with_run" ];then
            make_gdb_init
            local REMOTE_TARGET=" | exec $YALDA_ROOT_DIR/bin/yalda --silent run qemu --gdb stdio"
            export THIS_DIR REMOTE_TARGET
            envsubst < "$YALDA_ROOT_DIR/components/gdb/gdbinit_S.template"> "$YALDA_WORKDIR/gdbinit"
            trap "rm -f \"$YALDA_WORKDIR/gdbinit\"" EXIT
        else
            [ -f "$YALDA_WORKDIR/gdbinit" ] || log_error "Launch YALDA first"
        fi

        gdb_params="${YALDA_KERNEL_BUILD_DIR}/vmlinux"
        gdb_params+=" ${CONFIG_YALDA_GDB_PARAMETERS}"
        gdb_params+=" -ix ${YALDA_WORKDIR}/gdbinit -iex 'set auto-load safe-path /'"

        if [ -n "$CONFIG_YALDA_GDB_EXTRAINIT" ];then
            if [ -r "$CONFIG_YALDA_GDB_EXTRAINIT" ]; then
                gdb_params+=" -ix $CONFIG_YALDA_GDB_EXTRAINIT"
            else
                log_warning "Extra GDB init not found $CONFIG_YALDA_GDB_EXTRAINIT"
            fi
        fi
        if [ "$CONFIG_YALDA_GDB_FROM_IDE" == "y" ]; then
            gdb_params+=" -i=mi2"
        fi
        log_info "GDB Params:$gdb_params"
        if [ "$CONFIG_YALDA_GDB_FROM_TOOLCHAIN" == "y" ]; then
            eval ${CONFIG_YALDA_TOOLCHAIN_CROSS_PREFIX}gdb ${gdb_params}
        else
            eval gdb-multiarch ${gdb_params}
        fi
    fi
}

function do_clean
{
    return
}
